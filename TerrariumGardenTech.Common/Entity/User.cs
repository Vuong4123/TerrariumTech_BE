 // <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace TerrariumGardenTech.Repositories.Entity;

public partial class User
{
    public int UserId { get; set; }

    public string Username { get; set; }

    public string PasswordHash { get; set; }

    public string Email { get; set; }

    public string PhoneNumber { get; set; }

    public DateTime? DateOfBirth { get; set; }

    public string Gender { get; set; }

    public int? RoleId { get; set; }

    public string Token { get; set; } = string.Empty;

    public DateTime? StartToken { get; set; }

    public DateTime? EndToken { get; set; }

    public DateTime? CreatedAt { get; set; }

    public DateTime? UpdatedAt { get; set; }

    public string Status { get; set; }

    public string FullName { get; set; }

    public string Otp { get; set; }

    public string? AvatarUrl { get; set; }
    public string? BackgroundUrl { get; set; }

    public bool IsPersonalize { get; set; }
    public DateTime? OtpExpiration { get; set; }
    public string RefreshToken { get; set; } = string.Empty;
    public DateTime? RefreshTokenExpiryDate { get; set; }
    public DateTime? OtpSentAt { get; set; }        // lần gửi OTP gần nhất
    public int OtpResendCount { get; set; }         // số lần resend trong khung thời gian
    public virtual ICollection<Address> Addresses { get; set; } = new List<Address>();

    //public virtual ICollection<AisuggestLayout> AisuggestLayouts { get; set; } = new List<AisuggestLayout>();

    public virtual ICollection<Blog> Blogs { get; set; } = new List<Blog>();

    public virtual ICollection<Feedback> Feedbacks { get; set; } = new List<Feedback>();

    public virtual ICollection<Membership> Memberships { get; set; } = new List<Membership>();

    public virtual ICollection<Notification> Notifications { get; set; } = new List<Notification>();

    public virtual ICollection<Order> Orders { get; set; } = new List<Order>();

    public virtual ICollection<Personalize> Personalizes { get; set; } = new List<Personalize>();


    public virtual ICollection<Chat> ChatsAsUser1 { get; set; } = new List<Chat>();

    public virtual ICollection<Chat> ChatsAsUser2 { get; set; } = new List<Chat>();

    public virtual ICollection<ChatMessage> SentMessages { get; set; } = new List<ChatMessage>();

    public virtual Role Role { get; set; }
}